{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactsList/contactsListItem/ContactsListItem.module.css","components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/selector/contacts-selector.js","components/contactForm/ContactForm.js","components/contactsList/contactsListItem/ContactsListItem.js","components/contactsList/ContactsList.js","redux/filter/filterActions.js","components/filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","axios","defaults","baseURL","getContacts","state","contacts","items","getFilterValue","filter","getLoaderCondition","isLoading","getFilteredContacts","createSelector","filterValue","contact","name","toLowerCase","includes","ContactForm","number","onHandleChange","e","target","value","setState","onFormSubmit","preventDefault","isSameContactName","props","findIndex","isSameContactPhone","alert","addContactOperation","this","fetchContactsOperation","className","styles","form","onSubmit","label","type","pattern","title","required","onChange","addContactBtn","Component","connect","dispatch","a","post","then","res","data","response","message","get","length","removeContactOperation","id","delete","contactsItem","contactName","contactsNumber","contactsButton","onClick","filteredContacts","contactsList","map","updateFilterValue","filterContiner","App","ContactsList","contactsItemReducer","createReducer","_","payload","el","loader","contactsFilterReducer","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7409d13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2eli9\",\"label\":\"ContactForm_label__Zklx0\",\"addContactBtn\":\"ContactForm_addContactBtn__1sG-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsListItem_contactsItem__3-2nq\",\"contactName\":\"ContactsListItem_contactName__3ssle\",\"contactsNumber\":\"ContactsListItem_contactsNumber__HuXeM\",\"contactsButton\":\"ContactsListItem_contactsButton___HzuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContiner\":\"Filter_filterContiner__q9xoC\",\"label\":\"Filter_label__1eqHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__28xnA\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSucces\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\nexport const removeContactRequest = createAction(\r\n  \"contacts/removeContacRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\"contacts/removeContacSucces\");\r\nexport const removeContactError = createAction(\"contacts/removeContacError\");\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3010\";\r\n\r\nexport const fetchContactsOperation = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const response = await axios.get(\"/contacts\").then((res) => res.data);\r\n\r\n    if (response.length) dispatch(fetchContactsSuccess(response));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (contact) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const response = await axios\r\n      .post(\"/contacts\", contact)\r\n      .then((res) => res.data);\r\n    dispatch(addContactSuccess(response));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeContactOperation = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error.message));\r\n  }\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\nexport const getLoaderCondition = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilterValue],\r\n  (contacts, filterValue) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addContactOperation,\r\n  fetchContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getContacts } from \"../../redux/selector/contacts-selector\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    const isSameContactName = this.props.contacts.findIndex(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const isSameContactPhone = this.props.contacts.findIndex(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (isSameContactName !== -1) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    } else if (isSameContactPhone !== -1) {\r\n      return alert(`Phone number ${this.state.number} is already in contacts`);\r\n    }\r\n\r\n    this.props.addContactOperation(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onFormSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.addContactBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  fetchContactsOperation,\r\n})(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContactOperation } from \"../../../redux/contacts/contactsOperations\";\r\nimport styles from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ name, number, id, removeContactOperation }) => {\r\n  const removeItem = () => {\r\n    removeContactOperation(id);\r\n  };\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <p className={styles.contactName}>\r\n        {name}:<span className={styles.contactsNumber}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={removeItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { removeContactOperation })(ContactsListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport {\r\n  getFilteredContacts,\r\n  getFilterValue,\r\n  getLoaderCondition,\r\n} from \"../../redux/selector/contacts-selector\";\r\n\r\nconst ContactList = ({ isLoading, filteredContacts }) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <ul className={styles.contactsList}>\r\n          {filteredContacts.map((contact) => (\r\n            <ContactsListItem key={contact.id} {...contact} id={contact.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filteredContacts: getFilteredContacts(state),\r\n  filterValue: getFilterValue(state),\r\n  isLoading: getLoaderCondition(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateFilterValue = createAction(\"updateFilterValue\");\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilterValue } from \"../../redux/filter/filterActions\";\r\nimport { getFilterValue } from \"../../redux/selector/contacts-selector\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ updateFilterValue, filterValue }) => {\r\n  const onHandleChange = (e) => {\r\n    updateFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filterContiner}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterValue: getFilterValue(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateFilterValue })(Filter);\r\n","import ContactForm from \"./contactForm/ContactForm\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport Filter from \"./filter/Filter\";\n\nconst App = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\nexport const contactsItemReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n});\r\n\r\nexport const error = createReducer(\"\", {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [removeContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const loader = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { updateFilterValue } from \"./filterActions\";\r\n\r\nconst contactsFilterReducer = createReducer(\"\", {\r\n  [updateFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default contactsFilterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { contactsItemReducer, loader } from \"./contacts/contactsReducer\";\r\nimport contactsFilterReducer from \"./filter/filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsItemReducer,\r\n  filter: contactsFilterReducer,\r\n  isLoading: loader,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n\r\n// ================== To be kept for next hw =============================\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const persistConfig = {\r\n//   key: \"contactsInfo\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\n// const store = configureStore({\r\n//   reducer: { contacts: persistReducer(persistConfig, rootReducer) },\r\n\r\n//   middleware: getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const reduxStore = { store, persistor };\r\n\r\n// export default reduxStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={reduxStore.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}